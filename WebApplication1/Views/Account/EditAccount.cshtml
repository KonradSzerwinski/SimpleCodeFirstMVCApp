@model WebApplication1.ViewModels.EditAccountViewModel

@{
    ViewBag.Title = "EditAccount";
}

<h2>EditAccount</h2>


@using (Html.BeginForm("EditAccount","Account",FormMethod.Post, new{ enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    @*<h4>EditAccountViewModel</h4>*@
    <hr />
    @if (ViewBag.Status == false)
    {
        <div class="alert alert-danger" role="alert">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        </div>
    }
    <div class="form-group">
        @Html.LabelFor(model => model.NewUserName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.NewUserName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.NewUserName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.NewEmail, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.NewEmail, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.NewEmail, "", new { @class = "text-danger" })
        </div>
    </div>

    @if (Session["Role"].ToString() == "Admin")
    {
        <div class="form-group">
            @Html.LabelFor(model => model.NewRole, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NewRole, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NewRole, "", new { @class = "text-danger" })
            </div>
        </div>
    }

    <div class="form-group">
        @Html.LabelFor(model => model.NewPassword, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.NewPassword, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.NewPassword, "", new { @class = "text-danger" })
        </div>
    </div>
    @if (Convert.ToInt32(Session["UserID"]) == Model.ID)
    {
        <div class="form-group">
            @Html.LabelFor(model => model.ConfirmNewPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ConfirmNewPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ConfirmNewPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OldPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OldPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OldPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProfilePicture, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="UserPhoto" id="FileUpload" accept=".png, .jpg, .jpeg, .gif, .tif" />
            </div>
        </div>
    }

    <div class="form-group">
        @Html.LabelFor(model => model.ModifyDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DisplayFor(model => model.ModifyDate)
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save Changes" class="btn btn-default" />
        </div>
    </div>
</div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
